{"version":3,"sources":["App.js","index.js"],"names":["App","useState","auth","setAuth","applicationId","setApplicationId","environmentName","setEnvironmentName","allFlags","setAllFlags","handleChange","event","type","target","value","className","name","onChange","onClick","fetch","method","headers","accept","authorization","then","res","catch","err","console","log","map","flag","filter","includes","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAiJeA,MA5If,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACJC,EADI,KACEC,EADF,OAE+BF,mBAAS,IAFxC,mBAEJG,EAFI,KAEWC,EAFX,OAGmCJ,mBAAS,IAH5C,mBAGJK,EAHI,KAGaC,EAHb,OAIqBN,mBAAS,MAJ9B,mBAIJO,EAJI,KAIMC,EAJN,KAgFLC,EAAe,SAACC,EAAOC,GACzB,OAAQA,GACJ,IAAK,OACD,OAAOT,EAAQQ,EAAME,OAAOC,OAChC,IAAK,QACD,OAAOT,EAAiBM,EAAME,OAAOC,OACzC,IAAK,UACD,OAAOP,EAAmBI,EAAME,OAAOC,OAC3C,QACI,SAIZ,OACI,sBAAKC,UAAU,MAAf,UACI,gEACA,sBAAKA,UAAW,WAAhB,UACI,kCACI,uBACIH,KAAK,OACLI,KAAM,OACNC,SAAU,SAACN,GAAD,OAAWD,EAAaC,EAAO,WAE7C,oDAEJ,kCACI,uBACIC,KAAK,OACLI,KAAM,QACNC,SAAU,SAACN,GAAD,OAAWD,EAAaC,EAAO,YAE7C,oDAEJ,kCACI,uBACIC,KAAK,OACLI,KAAM,UACNC,SAAU,SAACN,GAAD,OAAWD,EAAaC,EAAO,cAE7C,sDAGJ,8BACI,wBAAQO,QArHF,WAClBC,MAAM,oDAAD,OACmDf,EADnD,YACoEE,EADpE,UAED,CACIc,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAc,UAAD,OAAYrB,MAGnCsB,MAAK,SAACC,GACJhB,EAAY,YAAIgB,OACjBC,OAAM,SAACC,GACFC,QAAQC,IAAIF,OAwGwBZ,UAAW,gBAA3C,8BAGHP,EAAWA,EAASsB,KAAI,SAACC,GAAD,OAAU,qBAAKhB,UAAW,QAAhB,SAC/B,sBAAKA,UAAW,YAAhB,UACI,qBAAKA,UAAW,OAAhB,SAAyBgB,EAAKf,OAC9B,wBAAQD,UAAW,aAAcG,QAAS,kBA3EjCF,EA2E2De,EAAKf,UA1EzFG,MAAM,oDAAD,OAAqDf,EAArD,kBAA4EY,GAAQ,CACrFI,OAAQ,SACRC,QAAS,CACLE,cAAc,UAAD,OAAYrB,MAE9BsB,MAAK,WACJI,QAAQC,IAAR,eAAoBb,EAApB,aACAG,MAAM,oDAAD,OACmDf,EADnD,YACoEE,EADpE,UAED,CACIc,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAc,UAAD,OAAYrB,MAGnCsB,MAAK,SAACC,GACJhB,EAAYgB,SAEjBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MArBQ,IAACX,GA2ET,4BAEE,KACV,qBAAKD,UAAW,SAAhB,SACI,wBAAQG,QA7GS,WAEzBV,IACAA,EAASwB,QAAO,SAAAD,GAAI,OAAIA,EAAKf,KAAKiB,SAAS,QAAMC,SAAQ,SAAAH,GACrDZ,MAAM,oDAAD,OAAqDf,EAArD,kBAA4E2B,EAAKf,MAAQ,CAC1FI,OAAQ,SACRC,QAAS,CACLE,cAAc,UAAD,OAAYrB,MAE9BsB,MAAK,WACJI,QAAQC,IAAR,eAAoBE,EAAKf,KAAzB,mBAIRG,MAAM,oDAAD,OACmDf,EADnD,YACoEE,EADpE,UAED,CACIc,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAc,UAAD,OAAYrB,MAGnCsB,MAAK,SAACC,GACJhB,EAAYgB,QAqFR,gECrIpBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.049ddb53.chunk.js","sourcesContent":["import \"./App.css\";\nimport {useState} from \"react\";\n\nconst data = [{name: 'first'}, {name: 'first'}, {name: 'first'}, {name: 'first'}, {name: 'first'}, ]\n\nfunction App() {\n    const [auth, setAuth] = useState(\"\");\n    const [applicationId, setApplicationId] = useState(\"\");\n    const [environmentName, setEnvironmentName] = useState(\"\");\n    const [allFlags, setAllFlags] = useState(null);\n\n    const handleShowAll = () => {\n        fetch(\n            `https://x-api.rollout.io/public-api/applications/${applicationId}/${environmentName}/flags`,\n            {\n                method: \"GET\",\n                headers: {\n                    accept: \"application/json\",\n                    authorization: `Bearer ${auth}`,\n                },\n            }\n        ).then((res) => {\n            setAllFlags([...res]);\n        }).catch((err) => {\n                console.log(err)\n            }\n        );\n    };\n\n    const handleRemoveNonOriginals = () => {\n\n        if (allFlags) {\n            allFlags.filter(flag => flag.name.includes('.')).forEach(flag => {\n                fetch(`https://x-api.rollout.io/public-api/applications/${applicationId}/flags/${flag.name}`, {\n                    method: \"DELETE\",\n                    headers: {\n                        authorization: `Bearer ${auth}`,\n                    },\n                }).then(() => {\n                    console.log(`flag ${flag.name} removed`)\n                })\n            })\n\n            fetch(\n                `https://x-api.rollout.io/public-api/applications/${applicationId}/${environmentName}/flags`,\n                {\n                    method: \"GET\",\n                    headers: {\n                        accept: \"application/json\",\n                        authorization: `Bearer ${auth}`,\n                    },\n                }\n            ).then((res) => {\n                setAllFlags(res);\n            });\n        }\n\n    }\n\n    const handleRemoveOneFlag = (name) => {\n        fetch(`https://x-api.rollout.io/public-api/applications/${applicationId}/flags/${name}`, {\n            method: \"DELETE\",\n            headers: {\n                authorization: `Bearer ${auth}`,\n            },\n        }).then(() => {\n            console.log(`flag ${name} removed`)\n            fetch(\n                `https://x-api.rollout.io/public-api/applications/${applicationId}/${environmentName}/flags`,\n                {\n                    method: \"GET\",\n                    headers: {\n                        accept: \"application/json\",\n                        authorization: `Bearer ${auth}`,\n                    },\n                }\n            ).then((res) => {\n                setAllFlags(res);\n            });\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n\n    const handleChange = (event, type) => {\n        switch (type) {\n            case \"auth\":\n                return setAuth(event.target.value);\n            case \"appId\":\n                return setApplicationId(event.target.value);\n            case \"envName\":\n                return setEnvironmentName(event.target.value);\n            default:\n                return;\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Rox flags management dashboard</h1>\n            <div className={\"getFlags\"}>\n                <label>\n                    <input\n                        type=\"text\"\n                        name={\"auth\"}\n                        onChange={(event) => handleChange(event, \"auth\")}\n                    />\n                    <span>authorization</span>\n                </label>\n                <label>\n                    <input\n                        type=\"text\"\n                        name={\"appId\"}\n                        onChange={(event) => handleChange(event, \"appId\")}\n                    />\n                    <span>applicationId</span>\n                </label>\n                <label>\n                    <input\n                        type=\"text\"\n                        name={\"envName\"}\n                        onChange={(event) => handleChange(event, \"envName\")}\n                    />\n                    <span>environmentName</span>\n                </label>\n\n                <div>\n                    <button onClick={handleShowAll} className={'showAllButton'}>show all flags</button>\n                </div>\n\n                {allFlags ? allFlags.map((flag) => <div className={'flags'}>\n                    <div className={'flagGroup'}>\n                        <div className={'flag'}>{flag.name}</div>\n                        <button className={'removeFlag'} onClick={() => handleRemoveOneFlag(flag.name)}>remove</button>\n                    </div>\n                </div>) : null}\n                <div className={'remove'}>\n                    <button onClick={handleRemoveNonOriginals}>remove all flags with non-blank namespace</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}