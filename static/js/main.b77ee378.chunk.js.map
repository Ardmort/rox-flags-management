{"version":3,"sources":["App.js","index.js"],"names":["App","useState","auth","setAuth","applicationId","setApplicationId","environmentName","setEnvironmentName","allFlags","setAllFlags","handleChange","event","type","target","value","className","name","onChange","onClick","fetch","method","headers","accept","authorization","then","res","console","log","data","length","map","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA2EeA,MAxEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAE6BF,mBAAS,IAFtC,mBAENG,EAFM,KAESC,EAFT,OAGiCJ,mBAAS,IAH1C,mBAGNK,EAHM,KAGWC,EAHX,OAImBN,mBAAS,IAJ5B,mBAINO,EAJM,KAIIC,EAJJ,KAsBPC,EAAe,SAACC,EAAOC,GAC3B,OAAQA,GACN,IAAK,OACH,OAAOT,EAAQQ,EAAME,OAAOC,OAC9B,IAAK,QACH,OAAOT,EAAiBM,EAAME,OAAOC,OACvC,IAAK,UACH,OAAOP,EAAmBI,EAAME,OAAOC,OACzC,QACE,SAIN,OACE,sBAAKC,UAAU,MAAf,UACE,gEACA,sBAAKA,UAAW,WAAhB,UACE,kCACE,iDACA,uBACEH,KAAK,OACLI,KAAM,OACNC,SAAU,SAACN,GAAD,OAAWD,EAAaC,EAAO,cAG7C,kCACE,iDACA,uBACEC,KAAK,OACLI,KAAM,QACNC,SAAU,SAACN,GAAD,OAAWD,EAAaC,EAAO,eAG7C,kCACE,mDACA,uBACEC,KAAK,OACLI,KAAM,UACNC,SAAU,SAACN,GAAD,OAAWD,EAAaC,EAAO,iBAI7C,wBAAQO,QA1DQ,WACpBC,MAAM,oDAAD,OACiDf,EADjD,YACkEE,EADlE,UAEH,CACEc,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAerB,KAGnBsB,MAAK,SAACC,GACNC,QAAQC,IAAIF,GACZhB,EAAYgB,EAAIG,UA8Cd,4BAECpB,EAASqB,QAAUrB,EAASsB,KAAI,SAACC,GAAD,OAAU,8BAAMA,EAAKf,iBChE9DgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b77ee378.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [auth, setAuth] = useState(\"\");\n  const [applicationId, setApplicationId] = useState(\"\");\n  const [environmentName, setEnvironmentName] = useState(\"\");\n  const [allFlags, setAllFlags] = useState([]);\n\n  const handleShowAll = () => {\n    fetch(\n      `https://x-api.rollout.io/public-api/applications/${applicationId}/${environmentName}/flags`,\n      {\n        method: \"GET\",\n        headers: {\n          accept: \"application/json\",\n          authorization: auth,\n        },\n      }\n    ).then((res) => {\n      console.log(res);\n      setAllFlags(res.data);\n    });\n  };\n\n  const handleChange = (event, type) => {\n    switch (type) {\n      case \"auth\":\n        return setAuth(event.target.value);\n      case \"appId\":\n        return setApplicationId(event.target.value);\n      case \"envName\":\n        return setEnvironmentName(event.target.value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Rox flags management dashboard</h1>\n      <div className={\"getFlags\"}>\n        <label>\n          <span>authorization</span>\n          <input\n            type=\"text\"\n            name={\"auth\"}\n            onChange={(event) => handleChange(event, \"auth\")}\n          />\n        </label>\n        <label>\n          <span>applicationId</span>\n          <input\n            type=\"text\"\n            name={\"appId\"}\n            onChange={(event) => handleChange(event, \"appId\")}\n          />\n        </label>\n        <label>\n          <span>environmentName</span>\n          <input\n            type=\"text\"\n            name={\"envName\"}\n            onChange={(event) => handleChange(event, \"envName\")}\n          />\n        </label>\n\n        <button onClick={handleShowAll}>show all flags</button>\n\n        {allFlags.length && allFlags.map((flag) => <div>{flag.name}</div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}